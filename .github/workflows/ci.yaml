name: CI
on: [push]
jobs:
  lint_test_and_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: flake8 linting
        run: poetry run flake8 .
      - name: black code formatting
        run: poetry run black . --check
      - name: mypy type checking
        run: poetry run mypy .
      - name: pytest
        run: poetry run pytest
      - name: build
        run: poetry build

  release:
    needs: lint_test_and_build
    permissions:
      contents: write
      id-token: write
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release
    environment:
      name: pypi
      url: https://pypi.org/p/causal-tracer
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v8.0.7
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
